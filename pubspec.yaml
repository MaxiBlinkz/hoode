name: hoode
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
# publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  admob_easy: any
  app_links:
  chatview: ^2.4.0
  blobs:
  loading_animation_widget:
  contained_tab_bar_view:
  country_code_picker:
  country_state_city_picker_2: ^1.0.5
  country_state_city_pro:
  cropperx:
  csc_picker: # The following adds the Cupertino Icons font to your application.

  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  crystal_navigation_bar:
  currency_textfield: ^4.12.0
  dio: ^5.7.0
  drift:
  easy_loading_button:
  enefty_icons:
  envied:
  flex_color_scheme:
  flutter:
    sdk: flutter
  flutter_iconly:
  flutter_map:
  flutter_map_marker_cluster:
  flutter_map_marker_popup:
  flutter_remix: ^0.0.1
  flutter_svg:
  free_map:
  geocoding:
  geolocator:
  get:
  get_it:
  get_storage:
  glassmorphism:
  go_router:
  google_fonts:
  google_maps_flutter: ^2.10.0
  google_mobile_ads:
  google_sign_in: 
  http:
  hugeicons:
  iconly:
  icons_launcher:
  icons_plus:
  iconsax:
  image: ^4.3.0
  image_cropper: ^8.0.2
  image_picker: ^1.1.2
  json_annotation: ^4.8.1
  latlong2:
  loading_transition_button:
  loading_indicator: ^3.1.1
  location:
  # location_plus:
  logger:
  lottie:
  maps_toolkit: ^3.0.0
  customisable_stepper:
  mix: ^1.4.6
  objectbox:
  password_strength_checker: ^1.2.4
  path:
  path_provider:
  paystack: any
  pixel_perfect:
  pocketbase:
  quickalert:
  r_nav_n_sheet:
  redacted:
  responsive_builder:
  retrofit:
  rounded_loading_button:
  rounded_loading_button_plus:
  sentry_flutter: ^8.9.0
  share_plus:
  showcaseview:
  skeletonizer: ^1.4.2
  sqlite3_flutter_libs:
  stylish_bottom_bar:
  toastification:
  url_launcher:
  whatsapp_unilink:
  wordpress_api:

dev_dependencies:
  analyzer: any
  build_runner:
  drift_dev:
  flutter_gen_runner:
  flutter_launcher_icons:

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  flutter_test:
    sdk: flutter
    # For information on the generic Dart part of this file, see the
    # following page: https://dart.dev/tools/pub/pubspec

    # The following section is specific to Flutter packages.
  json_serializable: ^6.7.1
  mockito:
  retrofit_generator:
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/fonts/Poppins/
    - assets/images/
    - assets/icons/
    - assets/images/house_placeholder.jpg
    - assets/animations/house_search.json
    - assets/animations/property_filter.json
    - assets/animations/chat_agent.json
    - assets/animations/agent.json
    - assets/animations/loading_more.json
    - assets/animations/load_more.json
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
